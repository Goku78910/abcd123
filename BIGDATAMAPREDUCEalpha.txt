Charcount.java(Driver Class)
import org.apache.hadoop.conf.Configuration;
import org.apache.hadoop.fs.Path; import
org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Job;
import org.apache.hadoop.mapreduce.lib.input.FileInputFormat; import
org.apache.hadoop.mapreduce.lib.input.TextInputFormat; import
org.apache.hadoop.mapreduce.lib.output.FileOutputFormat; import
org.apache.hadoop.mapreduce.lib.output.TextOutputFormat;
public class Charcount {
public static void main(String[] args) throws Exception {
 TODO Auto-generated method stub Configuration conf
= new Configuration(); Job job = new Job(conf,
Charcount); job.setJarByClass(Charcount.class);
job.setMapperClass(Charmap.class);
job.setReducerClass(Charreduce.class);
job.setInputFormatClass(TextInputFormat.class);
job.setOutputFormatClass(TextOutputFormat.class);
job.setMapOutputKeyClass(Text.class);
job.setMapOutputValueClass(IntWritable.class);
job.setOutputKeyClass(Text.class);
job.setOutputValueClass(IntWritable.class);
FileInputFormat.addInputPath(job, new Path(args[0]));
FileOutputFormat.setOutputPath(job, new Path(args[1]));
System.exit(job.waitForCompletion(true)  0  1);
}
}

Charmap.java(Mapper Class)
import java.io.IOException;
import java.util.StringTokenizer;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.LongWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Mapper;
public class Charmap extends MapperLongWritable, Text, Text, IntWritable {
public void map(LongWritable key, Text value, Context context)
throws IOException, InterruptedException {
String line = value.toString();
char[] carr = line.toCharArray();
for (char c  carr) {
System.out.println(c);
context.write(new Text(String.valueOf(c)), new IntWritable(1));
}
}
}

Charreduce.java(Reducer Class)
import java.io.IOException;
import org.apache.hadoop.io.IntWritable;
import org.apache.hadoop.io.Text;
import org.apache.hadoop.mapreduce.Reducer;
public class Charreduce extends ReducerText, IntWritable, Text, IntWritable { public
void reduce(Text key,IterableIntWritable values,Context context)throws
IOException,InterruptedException{
int count = 0;
IntWritable result = new IntWritable();
for (IntWritable val  values) {
count +=val.get();
result.set(count);
}
String found = key.toString();
if (found.equals(a)  found.equals(t)  found.equals(c)  found.equals(g))
{
context.write(key, result);
}
}
}