>library(igraph)
>g <- graph.formula(1-2, 1-3, 2-3, 2-4, 3-5, 4-5, 4-6,4-7, 5-6, 6-7)
>plot(g)
1) Number of edges
>ecount(g)
[1] 10
2) No of nodes
>vcount(g)
[1] 7
3) Degree of nodes
5
>degree(g)
1 2 3 4 5 6 7
2 3 3 4 3 3 2
>dg<- graph.formula(1-+2, 1-+3, 2++3)
>plot(dg)
>degree(dg, mode="in")
1 2 3
0 2 2
>degree(dg, mode="out")
1 2 3
2 1 1
4)Node with lowest degree
>V(dg)$name[degree(dg)==min(degree(dg))]
[1] "1"
Node with highest degree
>V(dg)$name[degree(dg)==max(degree(dg))]
[1] "2" "3"
5)To find neighbors / adjacency list:
>neighbors(g,5)
[1] 3 4 6
>neighbors(g,2)
[1] 1 3 4
>get.adjlist(dg)
$`1`
[1] 2 3
$`2`
[1] 1 3 3
$`3`
[1] 1 2 2
6) Adjacency Matrix
>get.adjacency(g)
7 x 7 sparse Matrix of class "dgCMatrix"
1 2 3 4 5 6 7
1 . 1 1 . . . .
2 1 . 1 1 . . .
3 1 1 . . 1 . .
4 .1 . . 1 1 1
5 . . 1 1 .1 .
6 . . . 1 1 . 1
7 . . . 1 .1 .